#ifndef CCHANNEL_H
#define CCHANNEL_H

#include<stdio.h>
#include<cstdlib>
#include<math.h>
#include<xmmintrin.h>
#include<tmmintrin.h>
#include<smmintrin.h>
#include<immintrin.h>
#include"mkl.h"
#include"CTool.h"
using namespace std;
// Random seed
struct RandSeed
{
	unsigned long IX;
	unsigned long IY;
	unsigned long IZ;
};
/*
	class channel:
	Gaussian Noise can be generated by the MKL function 
	or the the previous function of the C function
*/
class CChannel
{
public:
	//VSLStreamStatePtr stream;

	MKL_Complex8 * SymbolSeq;//Complex MKL_Complex8 includes real and complex

	float * BPSKSymbol;// BPSK symbols

	unsigned long SymbolLen;// The length of the symbol length

	VSLStreamStatePtr stream;// The Pointer 

	RandSeed RS;//The second Gaussian noise seed

	int  RandomSeed;//For initialization

	char padding[4];//For padding

	CChannel();
	~CChannel();

	float Random_Uniform(RandSeed & rs);
	float Random_Norm(double sigma, RandSeed & rs);
	
	void AWGNChannel(MKL_Complex8*inSymbolSeq, float sigma);//Generate Gaussian noise for high-order modulation

	void Initial(unsigned long len, int index);// Initial space for variables

	void BPSKAWGNChannel(float* inSymbolSeq, float sigma);//Generate Gaussian noise for BPSK modualtion symbols

};

#endif // !AWGN_CHANNEL_H
